password hashing:
when we enter password the backend converts into one way function that is into a hash 
for eg: faiq -> afgs@23r which will be of 10 characters
we can not convert this hash back into the string
when the user enters the password the backend converts into the hash and matches it with the hash in the db 

//rainbow table is the table in which the millions of passwords are written along with its hashs and hackers generate this when they hack any db they can match the hash with the password
to avoid this we use salt that is string which is added after the password and this salt is not available in the rainbow table
to implement this salt we use bcrypt js 

after user enters the email password we send user the token which can session token or json token
here we are using jwt token which is json web token
